@model WebApplication2.Models.Entity.PT_MC_TIN_InputResult

@{
    ViewBag.Title = "SaveTIN";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/assets/css/layout_2.css" rel="stylesheet" type="text/css" />
<link href="~/Content/themes/My.css" rel="stylesheet" />
<script>

        function calculateAmount(val) {
            var price = val * 1;
            /*display the result*/
            var tot_price = price + (price * 0.18);
            var divobj = document.getElementById('tot_amount');
            divobj.value = tot_price;
        }
</script>


@*<h2>@ViewBag.Title.</h2>*@
<h3>@ViewBag.Message</h3>
<script>
    var showAlert = "@ViewBag.showAlert";
    var alertMessage = "@ViewBag.alertMessage";
    if (showAlert === "True") {
   alert(alertMessage);
    //} else {
    //    alert("Something wrong.");
    }


</script>



@{
    List<SelectListItem> listItems = new List<SelectListItem>();
    listItems.Add(new SelectListItem
    {
        Text = "Day",
        Value = "Day"
    });
    listItems.Add(new SelectListItem
    {
        Text = "Nigth",
        Value = "Nigth",

    });
}
@{
    List<SelectListItem> listItemsTime = new List<SelectListItem>();
    listItemsTime.Add(new SelectListItem
    {
        Text = "14:00",
        Value = "14:00",
    });
    listItemsTime.Add(new SelectListItem
    {
        Text = "02:00",
        Value = "02:00",
    });
   


}

<script>
        function Postsubmit() {
            var result = confirm("Are your sure. Do you want to save?");
            if (result) {
                return true;
            } else {
                return false;
            }
        }
</script>



@if (TempData["testmsg"] != null)
{
    @Html.Raw(TempData["testmsg"])
}


    @*"SaveProtek1", "PT_MC_Chemical"*@

    <h2>Input Analysis Result TIN</h2>

    @using (Html.BeginForm("SaveTIN", "PT_MC_Chemical_TIN_", FormMethod.Post))

    {

        @Html.AntiForgeryToken()


        <script src="~/Scripts/jquery-3.4.1.min.js" type="text/javascript"></script>



        <script type="text/javascript">
                function sum_no1() {
                    var txtTritrate1 = document.getElementById('txtTritrate1').value;
                    //var txtSecondNo = document.getElementById('txtSecondNo').value;
                    var result = parseFloat(txtTritrate1 * 24.8);
                    if (!isNaN(result)) {
                        document.getElementById('txtResultCal1').value = result.toFixed(2);
                    }
                }
                function sum_no2() {
                    var txtTritrate2 = document.getElementById('txtTritrate2').value;
                    var txtSTD2 = document.getElementById('txtSTD2').value;
                    var result = parseFloat(txtSTD2 - txtTritrate2) * 14.9;
                    if (!isNaN(result)) {
                        document.getElementById('txtResultCal2').value = result.toFixed(2);
                    }
                }
                function sum_no3() {
                    var txtTritrate3 = document.getElementById('txtTritrate3').value;
                    //var txtSTD3 = document.getElementById('txtSTD3').value;
                    //var txtSecondNo = document.getElementById('txtSecondNo').value;
                    var result = parseFloat(txtTritrate3 * 0.635);
                    if (!isNaN(result)) {
                        document.getElementById('txtResultCal3').value = result.toFixed(2);
                    }
                }
                function sum_no4() {
                    var txtTritrate4 = document.getElementById('txtTritrate4').value;
                    //var txtSecondNo = document.getElementById('txtSecondNo').value;
                    var result = parseFloat(txtTritrate4 * 1.187);
                    if (!isNaN(result)) {
                        document.getElementById('txtResultCal4').value = result.toFixed(2);
                    }
                }
                function sum_no5() {
                    var txtTritrate5 = document.getElementById('txtTritrate5').value;
                    var result = parseFloat(txtTritrate5 * 0.2);
                    if (!isNaN(result)) {
                        document.getElementById('txtResultCal5').value = result.toFixed(2);
                    }


                    var txtResultCal4 = document.getElementById('txtResultCal4').value;
                    var txtResultCal5 = document.getElementById('txtResultCal5').value;
                    var result6 = parseFloat(txtResultCal5 - txtResultCal4);
                    if (!isNaN(result6)) {
                        document.getElementById('txtResultCal6').value = result6.toFixed(2);
                    }

                }
                function sum_no6() {
                    var txtResultCal4 = document.getElementById('txtResultCal4').value;
                    var txtResultCal5 = document.getElementById('txtResultCal5').value;
                    var result = parseFloat(txtResultCal5 - txtResultCal4);
                    if (!isNaN(result)) {
                        document.getElementById('txtResultCal6').value = result.toFixed(2);
                    }
                }

                function sum_no7() {
                    var txtTritrate7 = document.getElementById('txtTritrate7').value;
                    var txtSTD7 = document.getElementById('txtSTD7').value;
                    var result = parseFloat(txtTritrate7 / txtSTD7) * 200;
                    if (!isNaN(result)) {
                        document.getElementById('txtResultCal7').value = result.toFixed(2);
                    }
                }
                function sum_no8() {
                    var txtTritrate8 = document.getElementById('txtTritrate8').value;
                    var result = parseFloat(txtTritrate8 * 11.76);
                    if (!isNaN(result)) {
                        document.getElementById('txtResultCal8').value = result.toFixed(2);
                    }
                }
                function sum_no9() {
                    var txtTritrate9 = document.getElementById('txtTritrate9').value;
                    var result = parseFloat(txtTritrate9 * 20);
                    if (!isNaN(result)) {
                        document.getElementById('txtResultCal9').value = result.toFixed(2);
                    }
                }
                function sum_no10() {
                    var txtTritrate10 = document.getElementById('txtTritrate10').value;
                    var result = parseFloat(txtTritrate10 * 0.635);
                    if (!isNaN(result)) {
                        document.getElementById('txtResultCal10').value = result.toFixed(2);
                    }
                }
                function sum_no11() {
                    var txtTritrate11 = document.getElementById('txtTritrate11').value;
                    var result = parseFloat(txtTritrate11 * 11.76);
                    if (!isNaN(result)) {
                        document.getElementById('txtResultCal11').value = result.toFixed(2);
                    }
                }
                function sum_no12() {
                    var txtTritrate12 = document.getElementById('txtTritrate12').value;
                    var txtSTD12 = document.getElementById('txtSTD12').value;
                    //var txtSecondNo = document.getElementById('txtSecondNo').value;
                    var result = parseFloat(txtTritrate12 / txtSTD12) * 200;
                    if (!isNaN(result)) {
                        document.getElementById('txtResultCal12').value = result.toFixed(2);
                    }
                }
                function sum_no13() {
                    var txtTritrate13 = document.getElementById('txtTritrate13').value;
                    //var txtSTD13 = document.getElementById('txtSTD13').value;
                    var result = parseFloat(txtTritrate13 * 0.635);
                    if (!isNaN(result)) {
                        document.getElementById('txtResultCal13').value = result.toFixed(3);
                    }
                }
                function sum_no14() {
                    var txtTritrate14 = document.getElementById('txtTritrate14').value;
                    //var txtSecondNo = document.getElementById('txtSecondNo').value;
                    var result = parseFloat(txtTritrate14 * 4);
                    if (!isNaN(result)) {
                        document.getElementById('txtResultCal14').value = result.toFixed(2);
                    }
                }
                function sum_no15() {
                    var txtTritrate15 = document.getElementById('txtTritrate15').value;
                    //var txtSecondNo = document.getElementById('txtSecondNo').value;
                    var result = parseFloat(txtTritrate15 * 0.189);
                    if (!isNaN(result)) {
                        document.getElementById('txtResultCal15').value = result.toFixed(2);
                    }
                }
                function sum_no16() {
                    var txtTritrate16 = document.getElementById('txtTritrate16').value;
                    //var txtSecondNo = document.getElementById('txtSecondNo').value;
                    var result = parseFloat(txtTritrate16 * 5.58);
                    if (!isNaN(result)) {
                        document.getElementById('txtResultCal16').value = result.toFixed(2);
                    }
                }
                
        </script>


        <div class="row">

            <div class="col-sm-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.EMPLOYEE_CODE, htmlAttributes: new { @class = "control-label col-md-8" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EMPLOYEE_CODE, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EMPLOYEE_CODE, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-sm-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.EMPLOYEE_NAME, htmlAttributes: new { @class = "control-label col-md-8" })
                    <div class="col-md-10">
                        @ViewBag.Name
                    </div>
                </div>
            </div>
            <div class="col-sm-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.DATED, htmlAttributes: new { @class = "control-label col-md-8" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DATED, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DATED, "", new { @type = "datetime-local" })
                    </div>
                </div>
            </div>

            <div class="col-sm-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.SHIFT, htmlAttributes: new { @class = "control-label col-md-8" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.SHIFT, listItems, "-- Select Shift --")
                    </div>
                </div>
            </div>


            <div class="col-sm-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.TIMED, htmlAttributes: new { @class = "control-label col-md-8" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.TIMED, listItemsTime, "-- Select Time --")
                    </div>
                </div>
            </div>

        </div>
        <br>

        <p align="left"><strong><span style="FONT-SIZE: 8pt">TIN</span></strong></p>
        <table class="taskList" style="WIDTH: 100%; BORDER-COLLAPSE: collapse" bordercolor="#bbbbbb" cellspacing="0" cellpadding="3" align="center" border="1">
            <thead>
                <tr>
                    <th style="WIDTH: 5%; BACKGROUND-COLOR: #63B8FF; TEXT-ALIGN: center" scope="col">No.</th>
                    <th style="WIDTH: 20%; BACKGROUND-COLOR: #63B8FF; TEXT-ALIGN: center" scope="col">Chemical Tank</th>
                    <th style="WIDTH: 20%; BACKGROUND-COLOR: #63B8FF; TEXT-ALIGN: center" scope="col">Analysis Item</th>
                    <th style="WIDTH: 10%; BACKGROUND-COLOR: #63B8FF; TEXT-ALIGN: center" scope="col">Standard</th>
                    @*<th style="WIDTH: 10%; BACKGROUND-COLOR: #63B8FF; TEXT-ALIGN: center" scope="col">Rb_value</th>
                        <th style="WIDTH: 10%; BACKGROUND-COLOR: #63B8FF; TEXT-ALIGN: center" scope="col">Ra_value</th>*@
                    <th style="WIDTH: 20%; BACKGROUND-COLOR: #63B8FF; TEXT-ALIGN: center" scope="col">Tritrate</th>
                    <th style="WIDTH: 20%; BACKGROUND-COLOR: #63B8FF; TEXT-ALIGN: center" scope="col">Work</th>
                    @*<th style="WIDTH: 20%; BACKGROUND-COLOR: #d7e4ef; TEXT-ALIGN: center" scope="col">Rep.Calc</th>*@
                    @*<th style="WIDTH: 20%; BACKGROUND-COLOR: #d7e4ef; TEXT-ALIGN: center" scope="col">Actual Supply</th>*@
                    <th style="WIDTH: 20%; BACKGROUND-COLOR: #63B8FF; TEXT-ALIGN: center" scope="col">Remark</th>
                    @*<th style="WIDTH: 20%; BACKGROUND-COLOR: #d7e4ef; TEXT-ALIGN: center" scope="col">Calculation</th>*@
                    @*<th style="WIDTH: 20%; BACKGROUND-COLOR: #d7e4ef; TEXT-ALIGN: center" scope="col">Save</th>*@

                </tr>
            </thead>
            <tbody>
                <tr>
                    <td style="WIDTH: 5%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <h5>1.</h5>
                    </td>
                    <td style="WIDTH: 20%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.strchemicalTankTIN[0], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                    <td style="WIDTH: 20%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.stranalysisItemTIN[0], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                    <td style="WIDTH: 10%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @*<input type="text" id="txtSTD" name="STD1" placeholder="Standard"  />*@
                    </td>

                    <td style="WIDTH: 20%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <input type="text" id="txtTritrate1" name="Tritrate1" placeholder="Tritrate" onkeyup="sum_no1()" />
                    </td>
                    <td style="WIDTH: 20%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">

                        <input type="text" id="txtResultCal1" name="ResultCal1" placeholder="Working" />

                    </td>


                    <td style="WIDTH: 20%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">

                        @Html.EditorFor(model => model.strRemarkTIN[0], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>

                </tr>
                <tr>
                    <td style="WIDTH: 5%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <h5>2.</h5>
                    </td>
                    <td style="WIDTH: 20%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.strchemicalTankTIN[1], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                    <td style="WIDTH: 20%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.stranalysisItemTIN[1], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                    <td style="WIDTH: 10%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <input type="text" id="txtSTD2" name="STD2" placeholder="Standard" />
                    </td>


                    <td style="WIDTH: 20%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @*@Html.EditorFor(model => model.TRITRATE2, new { htmlAttributes = new { @class = "form-control" } })*@
                        <input type="text" id="txtTritrate2" name="Tritrate2" placeholder="Tritrate" onkeyup="sum_no2()" />
                    </td>
                    <td style="WIDTH: 20%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">

                        <input type="text" id="txtResultCal2" name="ResultCal2" placeholder="Working" />
                    </td>
                    <td style="WIDTH: 20%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.strRemarkTIN[1], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>

                <tr>
                    <td style="WIDTH: 5%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <h5>3.</h5>
                    </td>
                    <td style="WIDTH: 20%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.strchemicalTankTIN[2], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                    <td style="WIDTH: 20%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.stranalysisItemTIN[2], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                    <td style="WIDTH: 10%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @*<input type="text" id="txtSTD3" name="STD3" placeholder="Standard" />*@
                    </td>

                    <td style="WIDTH: 20%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <input type="text" id="txtTritrate3" name="Tritrate3" placeholder="Tritrate" onkeyup="sum_no3()" />
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <input type="text" id="txtResultCal3" name="ResultCal3" placeholder="Working" />

                    </td>

                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.strRemarkTIN[2], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>

                </tr>
                <tr>
                    <td style="WIDTH: 5%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <h5>4.</h5>
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.strchemicalTankTIN[3], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.stranalysisItemTIN[3], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                    <td style="WIDTH: 10%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @*<input type="text" id="txtSTD4" name="STD4" placeholder="Standard" />*@
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @*@Html.EditorFor(model => model.TRITRATE4, new { htmlAttributes = new { @class = "form-control" } })*@

                        <input type="text" id="txtTritrate4" name="Tritrate4" placeholder="Tritrate" onkeyup="sum_no4()" />
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <input type="text" id="txtResultCal4" name="ResultCal4" placeholder="Working" />
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.strRemarkTIN[3], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                </tr>
                <tr>
                    <td style="WIDTH: 5%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <h5>5.</h5>
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.strchemicalTankTIN[4], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.stranalysisItemTIN[4], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                    <td style="WIDTH: 10%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <input type="text" id="txtTritrate5" name="Tritrate5" placeholder="Tritrate" onkeyup="sum_no5()" />
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <input type="text" id="txtResultCal5" name="ResultCal5" placeholder="Working" />

                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.strRemarkTIN[4], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                </tr>
                <tr>
                    <td style="WIDTH: 5%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <h5>6.</h5>
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.strchemicalTankTIN[5], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.stranalysisItemTIN[5], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                    <td style="WIDTH: 10%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                    </td>

                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">

                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <input type="text" id="txtResultCal6" name="ResultCal6" placeholder="Working" />
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.strRemarkTIN[5], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                </tr>
                <tr>
                    <td style="WIDTH: 5%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <h5>7.</h5>
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.strchemicalTankTIN[6], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.stranalysisItemTIN[6], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                    <td style="WIDTH: 10%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <input type="text" id="txtSTD7" name="STD7" placeholder="Standard" onkeyup="sum_no7()" />
                    </td>
                   
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <input type="text" id="txtTritrate7" name="Tritrate7" placeholder="Tritrate" onkeyup="sum_no7()" />
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <input type="text" id="txtResultCal7" name="ResultCal7" placeholder="Working" />
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.strRemarkTIN[6], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                </tr>


                <tr>
                    <td style="WIDTH: 5%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <h5>8.</h5>
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.strchemicalTankTIN[7], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.stranalysisItemTIN[7], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                    <td style="WIDTH: 10%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <input type="text" id="txtTritrate8" name="Tritrate8" placeholder="Tritrate" onkeyup="sum_no8()" />
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">

                        <input type="text" id="txtResultCal8" name="ResultCal8" placeholder="Working" />

                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.strRemarkTIN[7], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                </tr>


                <tr>
                    <td style="WIDTH: 5%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <h5>9.</h5>
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.strchemicalTankTIN[8], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.stranalysisItemTIN[8], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                    <td style="WIDTH: 10%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <input type="text" id="txtTritrate9" name="Tritrate9" placeholder="Tritrate" onkeyup="sum_no9()" />
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <input type="text" id="txtResultCal9" name="ResultCal9" placeholder="Working" />
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.strRemarkTIN[8], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                </tr>
                <tr>
                    <td style="WIDTH: 5%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <h5>10.</h5>
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.strchemicalTankTIN[9], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.stranalysisItemTIN[9], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                    <td style="WIDTH: 10%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <input type="text" id="txtTritrate10" name="Tritrate10" placeholder="Tritrate" onkeyup="sum_no10()" />
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <input type="text" id="txtResultCal10" name="ResultCal10" placeholder="Working" />
                    </td>

                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.strRemarkTIN[9], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>


                </tr>
                <tr>
                    <td style="WIDTH: 5%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <h5>11.</h5>
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.strchemicalTankTIN[10], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.stranalysisItemTIN[10], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                    <td style="WIDTH: 10%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <input type="text" id="txtTritrate11" name="Tritrate11" placeholder="Tritrate" onkeyup="sum_no11()" />
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <input type="text" id="txtResultCal11" name="ResultCal11" placeholder="Working" />
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.strRemarkTIN[10], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>

                </tr>
                <tr>
                    <td style="WIDTH: 5%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <h5>12.</h5>
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.strchemicalTankTIN[11], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.stranalysisItemTIN[11], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                    <td style="WIDTH: 10%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <input type="text" id="txtSTD12" name="STD12" placeholder="Standard" />
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <input type="text" id="txtTritrate12" name="Tritrate12" placeholder="Tritrate" onkeyup="sum_no12()" />
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <input type="text" id="txtResultCal12" name="ResultCal12" placeholder="Working" />
                    </td>

                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.strRemarkTIN[11], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>


                </tr>
                <tr>
                    <td style="WIDTH: 5%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <h5>13.</h5>
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.strchemicalTankTIN[12], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.stranalysisItemTIN[12], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                    <td style="WIDTH: 10%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @*<input type="text" id="txtSTD13" name="STD13" placeholder="Standard" />*@
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <input type="text" id="txtTritrate13" name="Tritrate13" placeholder="Tritrate" onkeyup="sum_no13()" />
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <input type="text" id="txtResultCal13" name="ResultCal13" placeholder="Working" />
                    </td>

                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.strRemarkTIN[12], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>

                </tr>
                <tr>
                    <td style="WIDTH: 5%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <h5>14.</h5>
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.strchemicalTankTIN[13], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.stranalysisItemTIN[13], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                    <td style="WIDTH: 10%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <input type="text" id="txtTritrate14" name="Tritrate14" placeholder="Tritrate" onkeyup="sum_no14()" />
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <input type="text" id="txtResultCal14" name="ResultCal14" placeholder="Working" />
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.strRemarkTIN[13], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>

                </tr>
                <tr>
                    <td style="WIDTH: 5%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <h5>15.</h5>
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.strchemicalTankTIN[14], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.stranalysisItemTIN[14], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                    <td style="WIDTH: 10%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <input type="text" id="txtTritrate15" name="Tritrate15" placeholder="Tritrate" onkeyup="sum_no15()" />
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <input type="text" id="txtResultCal15" name="ResultCal15" placeholder="Working" />

                    </td>

                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.strRemarkTIN[14], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>

                </tr>
                <tr>
                    <td style="WIDTH: 5%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <h5>16.</h5>
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.strchemicalTankTIN[15], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.stranalysisItemTIN[15], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                    <td style="WIDTH: 10%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <input type="text" id="txtTritrate16" name="Tritrate16" placeholder="Tritrate" onkeyup="sum_no16()" />
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        <input type="text" id="txtResultCal16" name="ResultCal16" placeholder="Working" />
                    </td>
                    <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                        @Html.EditorFor(model => model.strRemarkTIN[15], new { htmlAttributes = new { @readonly = "readonly" } })
                    </td>
                </tr>
          

            </tbody>



        </table><br />

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">

                    <button class="btn info" onclick="javascript:return Postsubmit();">Save</button>

                    <input type="submit" name="Cancel" value="Cancel" class="btn danger" />



                </div>
            </div>

    }


    <div>
        @Html.ActionLink("Back to List", "InputAnalysisTIN")
    </div>

