@model WebApplication2.Models.Entity.PT_MC_InputResult

@{
    ViewBag.Title = "SaveProtek1";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/assets/css/layout_2.css" rel="stylesheet" type="text/css" />
<link href="~/Content/themes/My.css" rel="stylesheet" />  
<script>

        function calculateAmount(val) {
            var price = val * 1;
            /*display the result*/
            var tot_price = price + (price * 0.18);
            var divobj = document.getElementById('tot_amount');
            divobj.value = tot_price;
        }
</script>


@*<h2>@ViewBag.Title.</h2>*@
<h3>@ViewBag.Message</h3>
<script>
    var showAlert = "@ViewBag.showAlert";
    var alertMessage = "@ViewBag.alertMessage";
    if (showAlert === "True") {
   alert(alertMessage);
    //} else {
    //    alert("Something wrong.");
    }


</script>



    @{
        List<SelectListItem> listItems = new List<SelectListItem>();
        listItems.Add(new SelectListItem
        {
            Text = "Day",
            Value = "Day"
        });
        listItems.Add(new SelectListItem
        {
            Text = "Nigth",
            Value = "Nigth",

        });
    }
    @{
        List<SelectListItem> listItemsTime = new List<SelectListItem>();
        listItemsTime.Add(new SelectListItem
        {
            Text = "02:00",
            Value = "02:00",
        });
        listItemsTime.Add(new SelectListItem
        {
            Text = "06:00",
            Value = "06:00",
        });
        listItemsTime.Add(new SelectListItem
        {
            Text = "10:00",
            Value = "10:00"
        });
        listItemsTime.Add(new SelectListItem
        {
            Text = "14:00",
            Value = "14:00",
        });
        listItemsTime.Add(new SelectListItem
        {
            Text = "18:00",
            Value = "18:00",
        });
        listItemsTime.Add(new SelectListItem
        {
            Text = "22:00",
            Value = "22:00"
        });

    }

    <script>
        function Postsubmit() {
            var result = confirm("Are your sure. Do you want to save?");
            if (result) {
                return true;
            } else {
                return false;
            }
        }
    </script>

@*@{
    ViewBag.Title = "Satyaprakash Sweetalert Javascript File";
}*@


@*<link href="~/Scripts/sweetalert.css" rel="stylesheet" />
        <script src="~/Scripts/jquery-3.4.1.js"></script>
        <script src="~/Scripts/sweetalert.js"></script>
        <script>


    $('#fileUploadExcel').click(function (e) {
        if ($('#fileUpload').val() === "") {
            sweetAlert("File Shouldn't Be Empty!!", "Please select file", "error");
            //alert("File Shouldn't Be Empty!!");
            return false;
        }
        if ($('#fileUpload').val() !== "") {
            sweetAlert("Congratulations!!", "You Uploaded A Valid File", "success");
            return false;
        }
    });


</script>*@

@if (TempData["testmsg"] != null)
{
    @Html.Raw(TempData["testmsg"])
}


@*"SaveProtek1", "PT_MC_Chemical"*@

    <h2>Input Analysis Result Protek 1. </h2>

    @using (Html.BeginForm("SaveProtek1", "PT_MC_Chemical", FormMethod.Post ))
        
        {

        @Html.AntiForgeryToken()


        @*<br />
        <div align="center">
            @if (ViewBag.Message != null)
            {
                <span class="success sweet-alert"> @ViewBag.Message</span>
            }
            <br />
            <div align="right" class="btn btn-default">
                @using (Html.BeginForm("SaveProtek1", "PT_MC_Chemical", FormMethod.Post, new { @enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    <input type="file" id="fileUpload" class="btn btn-primary" name="FileUpload" /><br />*@
                    @*<input type="submit" class="btn btn-primary" name="UploadNewEmployee" id="fileUploadExcel" value="POST" />*@
                    //}
            @*</div>*@


        @*</div>*@
      



            <script src="~/Scripts/jquery-3.4.1.min.js" type="text/javascript"></script>



            <script type="text/javascript">
                function sum_no1() {
                    var txtFirstNo = document.getElementById('txtFirstNo').value;
                    //var txtSecondNo = document.getElementById('txtSecondNo').value;
                    var result = parseFloat(txtFirstNo) * 0.1 / 2;
                    if (!isNaN(result)) {
                        document.getElementById('txtResult').value = result.toFixed(2);
                    }
                }
                function sum_no2() {
                    var txtTritrate2 = document.getElementById('txtTritrate2').value;
                    //var txtSecondNo = document.getElementById('txtSecondNo').value;
                    var result = parseFloat(txtTritrate2) * 0.556;
                    if (!isNaN(result)) {
                        document.getElementById('txtResultCal2').value = result.toFixed(2);
                    }
                }
                function sum_no3() {
                    var txtTritrate3 = document.getElementById('txtTritrate3').value;
                    //var txtSecondNo = document.getElementById('txtSecondNo').value;
                    var result = parseFloat(txtTritrate3) * 12.5;
                    if (!isNaN(result)) {
                        document.getElementById('txtResultCal3').value = result.toFixed(2);
                    }
                }
                function sum_no4() {
                    var txtTritrate4 = document.getElementById('txtTritrate4').value;
                    //var txtSecondNo = document.getElementById('txtSecondNo').value;
                    var result = parseFloat(txtTritrate4) * 24.5;
                    if (!isNaN(result)) {
                        document.getElementById('txtResultCal4').value = result.toFixed(2);
                    }
                }
                function sum_no5() {
                    var txtTritrate5 = document.getElementById('txtTritrate5').value;
                    //var txtSecondNo = document.getElementById('txtSecondNo').value;
                    var result = parseFloat(txtTritrate5) * 140.86;
                    if (!isNaN(result)) {
                        document.getElementById('txtResultCal5').value = result.toFixed(2);
                    }
                }
                function sum_no6() {
                    var txtTritrate6 = document.getElementById('txtTritrate6').value;
                    //var txtSecondNo = document.getElementById('txtSecondNo').value;
                    var result = parseFloat(txtTritrate6);
                    if (!isNaN(result)) {
                        document.getElementById('txtResultCal6').value = result.toFixed(2);
                    }
                }
                function sum_no7() {
                    var txtTritrate7 = document.getElementById('txtTritrate7').value;
                    //var txtSecondNo = document.getElementById('txtSecondNo').value;
                    var result = parseFloat(txtTritrate7);
                    if (!isNaN(result)) {
                        document.getElementById('txtResultCal7').value = result.toFixed(2);
                    }
                }
                function sum_no8() {
                    var txtTritrate8 = document.getElementById('txtTritrate8').value;
                    //var txtSecondNo = document.getElementById('txtSecondNo').value;
                    var result = parseFloat(txtTritrate8) * 4.28;
                    if (!isNaN(result)) {
                        document.getElementById('txtResultCal8').value = result.toFixed(2);
                    }
                }
                //function sum_no9() {
                //    var txtTritrate9 = document.getElementById('txtTritrate9').value;
                //    //var txtSecondNo = document.getElementById('txtSecondNo').value;
                //    var result = parseFloat(txtTritrate9) * 4.28;
                //    if (!isNaN(result)) {
                //        document.getElementById('txtResultCal9').value = result.toFixed(2);
                //    }
                //}
                function sum_no10() {
                    var txtTritrate10 = document.getElementById('txtTritrate10').value;
                    //var txtSecondNo = document.getElementById('txtSecondNo').value;
                    var result = parseFloat(txtTritrate10) * 27.2;
                    if (!isNaN(result)) {
                        document.getElementById('txtResultCal10').value = result.toFixed(2);
                    }
                }

                function sum_no11() {
                    var txtTritrate11 = document.getElementById('txtTritrate11').value;
                    //var txtSecondNo = document.getElementById('txtSecondNo').value;
                    var result = parseFloat(txtTritrate11) * 3.2 * 0.05;
                    if (!isNaN(result)) {
                        document.getElementById('txtResultCal11').value = result.toFixed(2);
                    }
                }
            </script>


            <div class="row">

                <div class="col-sm-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.EMPLOYEE_CODE, htmlAttributes: new { @class = "control-label col-md-8" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.EMPLOYEE_CODE, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EMPLOYEE_CODE, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-sm-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.EMPLOYEE_NAME, htmlAttributes: new { @class = "control-label col-md-8" })
                        <div class="col-md-10">
                            @ViewBag.Name
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.DATED, htmlAttributes: new { @class = "control-label col-md-8" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DATED, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DATED, "", new { @type = "datetime-local" })
                        </div>
                    </div>
                </div>

                <div class="col-sm-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.SHIFT, htmlAttributes: new { @class = "control-label col-md-8" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.SHIFT, listItems, "-- Select Shift --")
                        </div>
                    </div>
                </div>


                <div class="col-sm-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.TIMED, htmlAttributes: new { @class = "control-label col-md-8" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.TIMED, listItemsTime, "-- Select Time --")
                        </div>
                    </div>
                </div>

            </div>
            <br>
            @*<div class="panel panel-body">
                    <div align="center" class="panel-body">ELECTRIC</div>
                </div>*@


            @*<p align="center"><strong><span style="FONT-SIZE: 14pt">ELECTRIC</span></strong></p>*@
            <p align="left"><strong><span style="FONT-SIZE: 8pt">Protek 1</span></strong></p>
            <table class="taskList" style="WIDTH: 100%; BORDER-COLLAPSE: collapse" bordercolor="#bbbbbb" cellspacing="0" cellpadding="3" align="center" border="1">
                <thead>
                    <tr>
                        <th style="WIDTH: 5%; BACKGROUND-COLOR: #63B8FF; TEXT-ALIGN: center" scope="col">No.</th>
                        <th style="WIDTH: 20%; BACKGROUND-COLOR: #63B8FF; TEXT-ALIGN: center" scope="col">Chemical Tank</th>
                        <th style="WIDTH: 20%; BACKGROUND-COLOR: #63B8FF; TEXT-ALIGN: center" scope="col">Analysis Item</th>
                        <th style="WIDTH: 20%; BACKGROUND-COLOR: #63B8FF; TEXT-ALIGN: center" scope="col">Tritrate</th>
                        <th style="WIDTH: 20%; BACKGROUND-COLOR: #63B8FF; TEXT-ALIGN: center" scope="col">Work</th>
                        @*<th style="WIDTH: 20%; BACKGROUND-COLOR: #d7e4ef; TEXT-ALIGN: center" scope="col">Rep.Calc</th>*@
                        @*<th style="WIDTH: 20%; BACKGROUND-COLOR: #d7e4ef; TEXT-ALIGN: center" scope="col">Actual Supply</th>*@
                        <th style="WIDTH: 20%; BACKGROUND-COLOR: #63B8FF; TEXT-ALIGN: center" scope="col">Remark</th>
                        @*<th style="WIDTH: 20%; BACKGROUND-COLOR: #d7e4ef; TEXT-ALIGN: center" scope="col">Calculation</th>*@
                        @*<th style="WIDTH: 20%; BACKGROUND-COLOR: #d7e4ef; TEXT-ALIGN: center" scope="col">Save</th>*@

                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td style="WIDTH: 5%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            <h5>1.</h5>
                        </td>
                        <td style="WIDTH: 20%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @Html.EditorFor(model => model.strchemicalTank[0], new { htmlAttributes = new { @readonly = "readonly" } })
                        </td>
                        <td style="WIDTH: 20%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @Html.EditorFor(model => model.stranalysisItem[0], new { htmlAttributes = new { @readonly = "readonly" } })
                        </td>
                        <td style="WIDTH: 20%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @*@Html.EditorFor(model => model.TRITRATE, new { htmlAttributes = new { @class = "form-control" } })*@

                            <input type="text" id="txtFirstNo" name="Tritrate1" placeholder="Tritrate" onkeyup="sum_no1()" />

                            @*@Html.EditorFor(model => model.TRITRATE, new { @Value = (Model.TRITRATE > 0 ? Model.TRITRATE.ToString() : string.Empty) })*@
                        </td>
                        <td style="WIDTH: 20%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @*<input type="text" class="form-control" value="@ViewBag.Working01" />*@

                            @*@Html.EditorFor(model => model.strWork[0], new { htmlAttributes = new { @class = "form-control" } })*@
                            @*<input type="text" id="txtSecondNo" placeholder="pleaseenterSecond Number" onkeyup="sum()" />*@

                            <input type="text" id="txtResult" name="ResultCal" placeholder="Working" />

                        </td>

                        @*<td style="WIDTH: 20%; TEXT-ALIGN: center">*@

                        @*@Html.EditorFor(model => model.strRep[0], new { htmlAttributes = new { @class = "form-control" } })*@
                        @*<input type="text" id="txtRepCal1" placeholder="Replenishment" />*@
                        @*<input type="text" class="form-control" value="@ViewBag.Rep_Cal01" />*@

                        @*</td>
                            <td style="WIDTH: 20%; TEXT-ALIGN: center">*@

                        @*@Html.EditorFor(model => model.ACTUAL_SUPPLY, new { htmlAttributes = new { @class = "form-control" } })*@
                        @*<input type="text" id="txtActual1" placeholder="Actual Supply" />*@

                        @*<input type="text" class="form-control" value="@ViewBag.Result1" />*@

                        @*</td>*@

                        <td style="WIDTH: 20%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">

                            @Html.EditorFor(model => model.strRemark[0], new { htmlAttributes = new { @readonly = "readonly" } })
                        </td>

                    </tr>
                    <tr>
                        <td style="WIDTH: 5%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            <h5>2.</h5>
                        </td>
                        <td style="WIDTH: 20%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @Html.EditorFor(model => model.strchemicalTank[1], new { htmlAttributes = new { @readonly = "readonly" } })
                        </td>
                        <td style="WIDTH: 20%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @Html.EditorFor(model => model.stranalysisItem[1], new { htmlAttributes = new { @readonly = "readonly" } })
                        </td>
                        <td style="WIDTH: 20%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @*@Html.EditorFor(model => model.TRITRATE2, new { htmlAttributes = new { @class = "form-control" } })*@
                            <input type="text" id="txtTritrate2" name="Tritrate2" placeholder="Tritrate" onkeyup="sum_no2()" />
                        </td>
                        <td style="WIDTH: 20%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @*@Html.EditorFor(model => model.WORKING, new { htmlAttributes = new { @class = "form-control" } })*@
                            @*@Html.EditorFor(model => model.strWork[1], new { htmlAttributes = new { @class = "form-control" } })*@
                            <input type="text" id="txtResultCal2" name="ResultCal2" placeholder="Working" />
                        </td>
                        @*<td style="WIDTH: 20%; TEXT-ALIGN: center">*@
                        @*@Html.EditorFor(model => model.REP_CALC, new { htmlAttributes = new { @class = "form-control" } })*@
                        @*@Html.EditorFor(model => model.strRep[1], new { htmlAttributes = new { @class = "form-control" } })*@
                        @*<input type="text" id="txtRepCal2" placeholder="Replenishment" />*@
                        @*</td>*@
                        @*<td style="WIDTH: 20%; TEXT-ALIGN: center">*@
                        @*@Html.EditorFor(model => model.ACTUAL_SUPPLY2, new { htmlAttributes = new { @class = "form-control" } })*@
                        @*<input type="text" id="txtActual2" placeholder="Actual Supply" />*@
                        @*</td>*@
                        <td style="WIDTH: 20%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @Html.EditorFor(model => model.strRemark[1], new { htmlAttributes = new { @readonly = "readonly" } })
                        </td>

                    <tr>
                        <td style="WIDTH: 5%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            <h5>3.</h5>
                        </td>
                        <td style="WIDTH: 20%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @Html.EditorFor(model => model.strchemicalTank[2], new { htmlAttributes = new { @readonly = "readonly" } })
                        </td>
                        <td style="WIDTH: 20%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @Html.EditorFor(model => model.stranalysisItem[2], new { htmlAttributes = new { @readonly = "readonly" } })
                        </td>
                        <td style="WIDTH: 20%; BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @*@Html.EditorFor(model => model.TRITRATE3, new { htmlAttributes = new { @class = "form-control" } })*@

                            <input type="text" id="txtTritrate3" name="Tritrate3" placeholder="Tritrate" onkeyup="sum_no3()" />

                        </td>
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @*@Html.EditorFor(model => model.WORKING, new { htmlAttributes = new { @class = "form-control" } })*@
                            @*@Html.EditorFor(model => model.strWork[2], new { htmlAttributes = new { @class = "form-control" } })*@
                            <input type="text" id="txtResultCal3" name="ResultCal3" placeholder="Working" />

                        </td>
                        @*<td style="WIDTH: 20%; TEXT-ALIGN: center">*@
                        @*@Html.EditorFor(model => model.REP_CALC, new { htmlAttributes = new { @class = "form-control" } })*@
                        @*@Html.EditorFor(model => model.strRep[2], new { htmlAttributes = new { @class = "form-control" } })*@
                        @*<input type="text" id="txtRepCal3" placeholder="Replenishment" />*@
                        @*</td>*@
                        @*<td style="WIDTH: 20%; TEXT-ALIGN: center">*@
                        @*@Html.EditorFor(model => model.ACTUAL_SUPPLY3, new { htmlAttributes = new { @class = "form-control" } })*@
                        @*<input type="text" id="txtActual3" placeholder="Actual Supply" />*@
                        @*</td>*@
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @Html.EditorFor(model => model.strRemark[2], new { htmlAttributes = new { @readonly = "readonly" } })
                        </td>
                        @*<td style="WIDTH: 20%; TEXT-ALIGN: center">
                                <input type="submit" name="Cal3" value="Cal 3" class="btn btn-primary" />
                            </td>
                            <td style="WIDTH: 20%; TEXT-ALIGN: center">
                                <input type="submit" name="Save3" value="Save 3" class="btn btn-primary" onclick="javascript:return Postsubmit();" />
                            </td>*@
                    </tr>
                    <tr>
                        <td style="WIDTH: 5%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            <h5>4.</h5>
                        </td>
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @Html.EditorFor(model => model.strchemicalTank[3], new { htmlAttributes = new { @readonly = "readonly" } })
                        </td>
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @Html.EditorFor(model => model.stranalysisItem[3], new { htmlAttributes = new { @readonly = "readonly" } })
                        </td>
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @*@Html.EditorFor(model => model.TRITRATE4, new { htmlAttributes = new { @class = "form-control" } })*@

                            <input type="text" id="txtTritrate4" name="Tritrate4" placeholder="Tritrate" onkeyup="sum_no4()" />
                        </td>
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @*@Html.EditorFor(model => model.WORKING, new { htmlAttributes = new { @class = "form-control" } })*@
                            @*@Html.EditorFor(model => model.strWork[3], new { htmlAttributes = new { @class = "form-control" } })*@
                            <input type="text" id="txtResultCal4" name="ResultCal4" placeholder="Working" />


                        </td>
                        @*<td style="WIDTH: 20%; TEXT-ALIGN: center">*@
                        @*@Html.EditorFor(model => model.REP_CALC, new { htmlAttributes = new { @class = "form-control" } })*@
                        @*@Html.EditorFor(model => model.strRep[3], new { htmlAttributes = new { @class = "form-control" } })*@
                        @*<input type="text" id="txtRepCal4" placeholder="Replenishment" />*@
                        @*</td>*@
                        @*<td style="WIDTH: 20%; TEXT-ALIGN: center">*@
                        @*@Html.EditorFor(model => model.ACTUAL_SUPPLY4, new { htmlAttributes = new { @class = "form-control" } })*@
                        @*<input type="text" id="txtActual4" placeholder="Actual Supply" />*@
                        @*</td>*@
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @Html.EditorFor(model => model.strRemark[3], new { htmlAttributes = new { @readonly = "readonly" } })
                        </td>
                        @*<td style="WIDTH: 20%; TEXT-ALIGN: center">
                                <input type="submit" name="Cal4" value="Cal 4" class="btn btn-primary" />
                            </td>
                            <td style="WIDTH: 20%; TEXT-ALIGN: center">
                                <input type="submit" name="Save4" value="Save 4" class="btn btn-primary" onclick="javascript:return Postsubmit();" />
                            </td>*@
                    </tr>
                    <tr>
                        <td style="WIDTH: 5%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            <h5>5.</h5>
                        </td>
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @Html.EditorFor(model => model.strchemicalTank[4], new { htmlAttributes = new { @readonly = "readonly" } })
                        </td>
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @Html.EditorFor(model => model.stranalysisItem[4], new { htmlAttributes = new { @readonly = "readonly" } })
                        </td>
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @*@Html.EditorFor(model => model.TRITRATE5, new { htmlAttributes = new { @class = "form-control" } })*@
                            <input type="text" id="txtTritrate5" name="Tritrate5" placeholder="Tritrate" onkeyup="sum_no5()" />
                        </td>
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @*@Html.EditorFor(model => model.WORKING, new { htmlAttributes = new { @class = "form-control" } })*@
                            @*@Html.EditorFor(model => model.strWork[4], new { htmlAttributes = new { @class = "form-control" } })*@
                            <input type="text" id="txtResultCal5" name="ResultCal5" placeholder="Working" />


                        </td>
                        @*<td style="WIDTH: 20%; TEXT-ALIGN: center">*@
                        @*@Html.EditorFor(model => model.REP_CALC, new { htmlAttributes = new { @class = "form-control" } })*@
                        @*@Html.EditorFor(model => model.strRep[4], new { htmlAttributes = new { @class = "form-control" } })*@
                        @*<input type="text" id="txtRepCal5" placeholder="Replenishment" />*@
                        @*</td>*@
                        @*<td style="WIDTH: 20%; TEXT-ALIGN: center">*@
                        @*@Html.EditorFor(model => model.ACTUAL_SUPPLY5, new { htmlAttributes = new { @class = "form-control" } })*@
                        @*<input type="text" id="txtActual5" placeholder="Actual Supply" />*@
                        @*</td>*@
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @Html.EditorFor(model => model.strRemark[4], new { htmlAttributes = new { @readonly = "readonly" } })
                        </td>
                        @*<td style="WIDTH: 20%; TEXT-ALIGN: center">
                                <input type="submit" name="Cal5" value="Cal 5" class="btn btn-primary" />
                            </td>
                            <td style="WIDTH: 20%; TEXT-ALIGN: center">
                                <input type="submit" name="Save5" value="Save 5" class="btn btn-primary" onclick="javascript:return Postsubmit();" />
                            </td>*@
                    </tr>
                    <tr>
                        <td style="WIDTH: 5%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            <h5>6.</h5>
                        </td>
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @Html.EditorFor(model => model.strchemicalTank[5], new { htmlAttributes = new { @readonly = "readonly" } })
                        </td>
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @Html.EditorFor(model => model.stranalysisItem[5], new { htmlAttributes = new { @readonly = "readonly" } })
                        </td>
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @*@Html.EditorFor(model => model.TRITRATE6, new { htmlAttributes = new { @class = "form-control" } })*@
                            <input type="text" id="txtTritrate6" name="Tritrate6" placeholder="Tritrate" onkeyup="sum_no6()" />

                        </td>
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @*@Html.EditorFor(model => model.WORKING, new { htmlAttributes = new { @class = "form-control" } })*@
                            @*@Html.EditorFor(model => model.strWork[5], new { htmlAttributes = new { @class = "form-control" } })*@

                            <input type="text" id="txtResultCal6" name="ResultCal6" placeholder="Working" />

                        </td>
                        @*<td style="WIDTH: 20%; TEXT-ALIGN: center">*@
                        @*@Html.EditorFor(model => model.REP_CALC, new { htmlAttributes = new { @class = "form-control" } })*@
                        @*@Html.EditorFor(model => model.strRep[5], new { htmlAttributes = new { @class = "form-control" } })*@
                        @*<input type="text" id="txtRepCal6" placeholder="Replenishment" />*@
                        @*</td>*@
                        @*<td style="WIDTH: 20%; TEXT-ALIGN: center">*@
                        @*@Html.EditorFor(model => model.ACTUAL_SUPPLY6, new { htmlAttributes = new { @class = "form-control" } })*@
                        @*<input type="text" id="txtActual6" placeholder="Actual Supply" />*@
                        @*</td>*@
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @Html.EditorFor(model => model.strRemark[5], new { htmlAttributes = new { @readonly = "readonly" } })
                        </td>
                        @*<td style="WIDTH: 20%; TEXT-ALIGN: center">
                                <input type="submit" name="Cal6" value="Cal 6" class="btn btn-primary" />
                            </td>
                            <td style="WIDTH: 20%; TEXT-ALIGN: center">
                                <input type="submit" name="Save6" value="Save 6" class="btn btn-primary" onclick="javascript:return Postsubmit();" />
                            </td>*@
                    </tr>
                    <tr>
                        <td style="WIDTH: 5%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            <h5>7.</h5>
                        </td>
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @Html.EditorFor(model => model.strchemicalTank[6], new { htmlAttributes = new { @readonly = "readonly" } })
                        </td>
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @Html.EditorFor(model => model.stranalysisItem[6], new { htmlAttributes = new { @readonly = "readonly" } })
                        </td>
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @*@Html.EditorFor(model => model.TRITRATE7, new { htmlAttributes = new { @class = "form-control" } })*@
                            <input type="text" id="txtTritrate7" name="Tritrate7" placeholder="Tritrate" onkeyup="sum_no7()" />
                        </td>
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @*@Html.EditorFor(model => model.WORKING, new { htmlAttributes = new { @class = "form-control" } })*@
                            @*@Html.EditorFor(model => model.strWork[6], new { htmlAttributes = new { @class = "form-control" } })*@
                            <input type="text" id="txtResultCal7" name="ResultCal7" placeholder="Working" />

                        </td>
                        @*<td style="WIDTH: 20%; TEXT-ALIGN: center">*@
                        @*@Html.EditorFor(model => model.REP_CALC, new { htmlAttributes = new { @class = "form-control" } })*@
                        @*@Html.EditorFor(model => model.strRep[6], new { htmlAttributes = new { @class = "form-control" } })*@
                        @*<input type="text" id="txtRepCal7" placeholder="Replenishment" />*@
                        @*</td>*@
                        @*<td style="WIDTH: 20%; TEXT-ALIGN: center">*@
                        @*@Html.EditorFor(model => model.ACTUAL_SUPPLY7, new { htmlAttributes = new { @class = "form-control" } })*@
                        @*<input type="text" id="txtActual7" placeholder="Actual Supply" />*@
                        @*</td>*@
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @Html.EditorFor(model => model.strRemark[6], new { htmlAttributes = new { @readonly = "readonly" } })
                        </td>
                        @*<td style="WIDTH: 20%; TEXT-ALIGN: center">
                                <input type="submit" name="Cal7" value="Cal 7" class="btn btn-primary" />
                            </td>
                            <td style="WIDTH: 20%; TEXT-ALIGN: center">
                                <input type="submit" name="Save7" value="Save 7" class="btn btn-primary" onclick="javascript:return Postsubmit();" />
                            </td>*@
                    </tr>
                    <tr>
                        <td style="WIDTH: 5%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            <h5>8.</h5>
                        </td>
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @Html.EditorFor(model => model.strchemicalTank[7], new { htmlAttributes = new { @readonly = "readonly" } })
                        </td>
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @Html.EditorFor(model => model.stranalysisItem[7], new { htmlAttributes = new { @readonly = "readonly" } })
                        </td>
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @*@Html.EditorFor(model => model.TRITRATE8, new { htmlAttributes = new { @class = "form-control" } })*@
                            <input type="text" id="txtTritrate8" name="Tritrate8" placeholder="Tritrate" onkeyup="sum_no8()" />

                        </td>
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @*@Html.EditorFor(model => model.WORKING, new { htmlAttributes = new { @class = "form-control" } })*@
                            @*@Html.EditorFor(model => model.strWork[7], new { htmlAttributes = new { @class = "form-control" } })*@
                            <input type="text" id="txtResultCal8" name="ResultCal8" placeholder="Working" />
                        </td>
                        @*<td style="WIDTH: 20%; TEXT-ALIGN: center">*@
                        @*@Html.EditorFor(model => model.REP_CALC, new { htmlAttributes = new { @class = "form-control" } })*@
                        @*@Html.EditorFor(model => model.strRep[7], new { htmlAttributes = new { @class = "form-control" } })*@
                        @*<input type="text" id="txtRepCal8" placeholder="Replenishment" />*@
                        @*</td>*@
                        @*<td style="WIDTH: 20%; TEXT-ALIGN: center">*@
                        @*@Html.EditorFor(model => model.ACTUAL_SUPPLY8, new { htmlAttributes = new { @class = "form-control" } })*@
                        @*<input type="text" id="txtActual8" placeholder="Actual Supply" />*@
                        @*</td>*@
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @Html.EditorFor(model => model.strRemark[7], new { htmlAttributes = new { @readonly = "readonly" } })
                        </td>
                        @*<td style="WIDTH: 20%; TEXT-ALIGN: center">
                                <input type="submit" name="Cal8" value="Cal 8" class="btn btn-primary" />
                            </td>
                            <td style="WIDTH: 20%; TEXT-ALIGN: center">
                                <input type="submit" name="Save8" value="Save 8" class="btn btn-primary" onclick="javascript:return Postsubmit();" />
                            </td>*@
                    </tr>
                    <tr>
                        <td style="WIDTH: 5%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            <h5>9.</h5>
                        </td>
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @Html.EditorFor(model => model.strchemicalTank[8], new { htmlAttributes = new { @readonly = "readonly" } })
                        </td>
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @Html.EditorFor(model => model.stranalysisItem[8], new { htmlAttributes = new { @readonly = "readonly" } })
                        </td>
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @*@Html.EditorFor(model => model.TRITRATE9, new { htmlAttributes = new { @class = "form-control" } })*@
                            <input type="text" id="txtTritrate9" name="Tritrate9" placeholder="Tritrate" />

                        </td>
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @*@Html.EditorFor(model => model.WORKING9, new { htmlAttributes = new { @class = "form-control" } })*@
                            @*@Html.EditorFor(model => model.strWork[8], new { htmlAttributes = new { @class = "form-control" } })*@

                            <input type="text" id="txtResultCal9" name="ResultCal9" placeholder="Working" />

                        </td>
                        @*<td style="WIDTH: 20%; TEXT-ALIGN: center">*@
                        @*@Html.EditorFor(model => model.REP_CALC9, new { htmlAttributes = new { @class = "form-control" } })*@
                        @*@Html.EditorFor(model => model.strRep[8], new { htmlAttributes = new { @class = "form-control" } })*@

                        @*<input type="text" id="txtRepCal9" placeholder="Replenishment" />*@

                        @*</td>*@
                        @*<td style="WIDTH: 20%; TEXT-ALIGN: center">*@
                        @*@Html.EditorFor(model => model.ACTUAL_SUPPLY9, new { htmlAttributes = new { @class = "form-control" } })*@
                        @*<input type="text" name="Property1" value="@Model.ACTUAL_SUPPLY9" />*@
                        @*<input type="text" id="txtActual9" placeholder="Actual Supply" />*@
                        @*</td>*@
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @Html.EditorFor(model => model.strRemark[8], new { htmlAttributes = new { @readonly = "readonly" } })
                        </td>
                        @*<td style="WIDTH: 20%; TEXT-ALIGN: center">*@
                        @*<input type="submit" name="Cal9" value="Cal 9" class="btn btn-primary" />*@

                        @*</td>*@
                        @*<td style="WIDTH: 20%; TEXT-ALIGN: center">
                                <input type="submit" name="Save9" value="Save 9" class="btn btn-primary" onclick="javascript:return Postsubmit();"/>
                            </td>*@
                    </tr>
                    <tr>
                        <td style="WIDTH: 5%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            <h5>10.</h5>
                        </td>
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @Html.EditorFor(model => model.strchemicalTank[9], new { htmlAttributes = new { @readonly = "readonly" } })
                        </td>
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @Html.EditorFor(model => model.stranalysisItem[9], new { htmlAttributes = new { @readonly = "readonly" } })
                        </td>
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @*@Html.EditorFor(model => model.TRITRATE10, new { htmlAttributes = new { @class = "form-control" } })*@

                            <input type="text" id="txtTritrate10" name="Tritrate10" placeholder="Tritrate" onkeyup="sum_no10()" />

                        </td>
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @*@Html.EditorFor(model => model.WORKING, new { htmlAttributes = new { @class = "form-control" } })*@
                            @*@Html.EditorFor(model => model.strWork[9], new { htmlAttributes = new { @class = "form-control" } })*@
                            <input type="text" id="txtResultCal10" name="ResultCal10" placeholder="Working" />

                        </td>
                        @*<td style="WIDTH: 20%; TEXT-ALIGN: center">*@
                        @*@Html.EditorFor(model => model.REP_CALC, new { htmlAttributes = new { @class = "form-control" } })*@
                        @*@Html.EditorFor(model => model.strRep[9], new { htmlAttributes = new { @class = "form-control" } })*@
                        @*<input type="text" id="txtRepCal10" placeholder="Replenishment" />*@
                        @*</td>*@
                        @*<td style="WIDTH: 20%; TEXT-ALIGN: center">*@
                        @*@Html.EditorFor(model => model.ACTUAL_SUPPLY10, new { htmlAttributes = new { @class = "form-control" } })*@
                        @*<input type="text" id="txtActual10" placeholder="Actual Supply" />*@
                        @*</td>*@
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @Html.EditorFor(model => model.strRemark[9], new { htmlAttributes = new { @readonly = "readonly" } })
                        </td>
                        @*<td style="WIDTH: 20%; TEXT-ALIGN: center">
                                <input type="submit" name="Cal10" value="Cal 10" class="btn btn-primary" />
                            </td>
                            <td style="WIDTH: 20%; TEXT-ALIGN: center">
                                <input type="submit" name="Save10" value="Save 10" class="btn btn-primary" onclick="javascript:return Postsubmit();"/>
                            </td>*@
                    </tr>
                    <tr>
                        <td style="WIDTH: 5%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            <h5>11.</h5>
                        </td>
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @Html.EditorFor(model => model.strchemicalTank[10], new { htmlAttributes = new { @readonly = "readonly" } })
                        </td>
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @Html.EditorFor(model => model.stranalysisItem[10], new { htmlAttributes = new { @readonly = "readonly" } })
                        </td>
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @*@Html.EditorFor(model => model.TRITRATE11, new { htmlAttributes = new { @class = "form-control" } })*@
                            <input type="text" id="txtTritrate11" name="Tritrate11" placeholder="Tritrate" onkeyup="sum_no11()" />

                        </td>
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @*@Html.EditorFor(model => model.WORKING, new { htmlAttributes = new { @class = "form-control" } })*@
                            @*@Html.EditorFor(model => model.strWork[10], new { htmlAttributes = new { @class = "form-control" } })*@
                            <input type="text" id="txtResultCal11" name="ResultCal11" placeholder="Working" />

                        </td>
                        @*<td style="WIDTH: 20%; TEXT-ALIGN: center">*@
                        @*@Html.EditorFor(model => model.REP_CALC11, new { htmlAttributes = new { @class = "form-control" } })*@
                        @*<input type="text" id="txtRepCal11" placeholder="Replenishment" />*@
                        @*</td>*@
                        @*<td style="WIDTH: 20%; TEXT-ALIGN: center">*@
                        @*@Html.EditorFor(model => model.ACTUAL_SUPPLY11, new { htmlAttributes = new { @class = "form-control" } })*@
                        @*<input type="text" id="txtActual11" placeholder="Actual Supply" />*@
                        @*</td>*@
                        <td style="WIDTH: 20%;BACKGROUND-COLOR: #C6E2FF; TEXT-ALIGN: center">
                            @Html.EditorFor(model => model.strRemark[10], new { htmlAttributes = new { @readonly = "readonly" } })
                        </td>
                        @*<td style="WIDTH: 20%; TEXT-ALIGN: center">
                                <input type="submit" name="Cal11" value="Cal 11" class="btn btn-primary" />
                            </td>*@
                        @*<td style="WIDTH: 20%; TEXT-ALIGN: center">
                                <input type="submit" name="Save11" value="Save 11" class="btn btn-primary" onclick="javascript:return Postsubmit();" />
                            </td>*@
                    </tr>
                </tbody>



            </table><br />

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">

                   
                    
                    @*< input type="submit" id="fileUploadExcel" value="POST" >Save</button>*@
                   
                    @*<input type="submit" class="btn btn-primary" name="FileUpload" id="fileUploadExcel" value="POST" />*@


                    <button class="btn info" onclick="javascript:return Postsubmit();" >Save</button>
                    @*<button class="btn danger" name="Cancel" >Cancel</button>*@

                    <input type="submit" name="Cancel" value="Cancel" class="btn danger" />

                    @*<input type="submit" class="btn btn-primary" name="UploadNewEmployee" id="fileUploadExcel" value="POST" />*@

                    @*<div class="col-xs-2">


                        </div>*@
                    @*<input type="submit" value="Create" class="btn btn-default" />*@

                    @*<input type="submit" name="Save" value="Save" class="btn btn-primary" onclick="javascript:return Postsubmit();" />*@

                </div>
            </div>
                    
                }


                @*</div>


                </div>*@






            <div>
                @Html.ActionLink("Back to List", "InputAnalysis")
            </div>
