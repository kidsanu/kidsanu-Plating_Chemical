@model WebApplication2.Models.Entity.PT_MC_InputResult

@{
    ViewBag.Title = "Detail Input Result Protek 1";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>@ViewBag.Message</h3>
<script>
    var showAlert = "@ViewBag.showAlert";
    var alertMessage = "@ViewBag.alertMessage";
    if (showAlert === "True") {
   alert(alertMessage);
    }

</script>


<script type="text/javascript">
    function PostEditsubmit() {
        var result = confirm("Are your sure. Do you want to Edit ?");
        if (result) {
            return true;
        } else {
            return false;
        }
    }

    function PostDeletesubmit() {
        var result = confirm("Are your sure. Do you want to Delete ?");
        if (result) {
            return true;
        } else {
            return false;
        }
    }
</script>




<h2>Detail Input Result Protek 1</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.TRANSACTION_ID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TRANSACTION_ID, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } } )
                @Html.ValidationMessageFor(model => model.TRANSACTION_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MACHINE_CODE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MACHINE_CODE, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.MACHINE_CODE, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MACHINE_NAME, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MACHINE_NAME, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.MACHINE_NAME, "", new { @class = "text-danger" })
            </div>
        </div>
     
        <div class="form-group">
            @Html.LabelFor(model => model.CHEMICAL_TANK_ID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CHEMICAL_TANK_ID, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.CHEMICAL_TANK_ID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CHEMICAL_TANK_NAME, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CHEMICAL_TANK_NAME, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.CHEMICAL_TANK_NAME, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PART_NO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PART_NO, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.PART_NO, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CHEMICAL_NAME, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CHEMICAL_NAME, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.CHEMICAL_NAME, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TRITRATE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TRITRATE, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TRITRATE, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.WORKING, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WORKING, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WORKING, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.REP_CALC, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.REP_CALC, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.REP_CALC, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ACTUAL_SUPPLY, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ACTUAL_SUPPLY, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ACTUAL_SUPPLY, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EMPLOYEE_CODE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EMPLOYEE_CODE, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.EMPLOYEE_CODE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EMPLOYEE_NAME, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EMPLOYEE_NAME, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.EMPLOYEE_NAME, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @*<input type="submit" value="Edit" class="btn btn-default" />*@
                @*<button type="submit" class="btn btn-outline-primary">Edit</button>*@
                @*<button class="btn btn-primary" type="submit">Edit</button>*@
                <input type="submit" name="Edit" value="Edit" class="btn btn-primary" OnClick="JavaScript: PostEditsubmit();" />
                @*<input type="submit" name="Save1" value="Save 1" class="btn btn-primary" onclick="javascript:return Postsubmit();" />*@
                @*<button type="submit" class="btn btn-secondary">Edit</button>*@
                @*<input class="btn btn-primary" type="submit" value="Edit">*@
                @*<input class="btn btn-primary" type="submit" value="Delete">*@
                @*<button type="submit" value="Delete" class="btn btn-danger">Delete</button>*@
                <input type="submit" name="Delete" value="Delete" class="btn btn-danger" onclick="JavaScript: PostDeletesubmit();" />
            </div>
            @*<a class="btn btn-primary" href="#" role="button">Link</a>
            <button class="btn btn-primary" type="submit">Button</button>
            <input class="btn btn-primary" type="button" value="Input">
            <input class="btn btn-primary" type="submit" value="Submit">*@
        </div>
      
    </div>
}

@*<div>
    @Html.ActionLink("Edit", "SaveProtek1", new { /* id=item.PrimaryKey */ })
    </div>*@


<div>
    @Html.ActionLink("Back to List", "InputAnalysis")
</div>



